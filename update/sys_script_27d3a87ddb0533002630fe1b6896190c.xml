<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>false</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_239659_myneedit_needit</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>NeedIt When needed field date</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {

	// Instantiate the NeedItUtils class and call the isDatePast method
	var niutils = new NeedItUtils();
	var isPast = niutils.isDatePast(current.u_when_needed);
	
	// If the isDatePast method returns true, the date is in the past.
	if(isPast == true) {
		gs.addErrorMessage("When needed date cannot be in the past. Your request has not been saved to the database.");
		current.setAbortAction(true);
	}
	
	// My Challenge solution
// 	if( whenNeeded.getLocalDate() == rightnow.getLocalDate() ) {
// 		gs.addErrorMessage("When needed date cannot be today. Your request has not been saved to the database.");
// 		current.setAbortAction(true);
// 	}
	
	//Challenge: Do not allow same-day requests
	// Get the date portion of rightnow and whenNeeded (no timestamp)
	var isToday = niutils.isDateToday(current.u_when_needed);
	
	//var today = rightnow.getLocalDate();
	//var whenNeededDate = whenNeeded.getLocalDate();
	
	// Compare today and whenNeededDate to see if they are the same day
	if( isToday ) {
		gs.addErrorMessage("You can not submit NeedIt requests for today.");
		current.setAbortAction(true);
	}

})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2019-04-26 20:58:18</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>27d3a87ddb0533002630fe1b6896190c</sys_id>
        <sys_mod_count>7</sys_mod_count>
        <sys_name>NeedIt When needed field date</sys_name>
        <sys_overrides/>
        <sys_package display_value="myNeedIt" source="x_239659_myneedit">a94892f7db2023002630fe1b68961979</sys_package>
        <sys_policy/>
        <sys_scope display_value="myNeedIt">a94892f7db2023002630fe1b68961979</sys_scope>
        <sys_update_name>sys_script_27d3a87ddb0533002630fe1b6896190c</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2019-04-27 15:15:19</sys_updated_on>
        <template/>
        <when>before</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=27d3a87ddb0533002630fe1b6896190c"/>
</record_update>
